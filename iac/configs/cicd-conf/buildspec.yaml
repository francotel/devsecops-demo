version: 0.2

phases:
  install:
    commands:
      - echo "Installing Node.js 18"
      - n 18
      - echo Logging in to Amazon ECR...
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ENV_CB_ECR_URL
      - wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
      - chmod a+x /usr/local/bin/yq
      - yq --version
  pre_build:
    commands:
      - echo "Build commands go here"
      - aws --version
      - echo Installing source NPM dependencies...
      - npm install --prefix ./node-app
  build:
    commands:
      - aws s3 cp s3://$ENV_CB_S3_ARTIFACTS/cicd-conf/Dockerfile Dockerfile 
      - cat Dockerfile
      - docker build -t $ENV_CB_DOCKER_IMAGE:$CODEBUILD_BUILD_NUMBER .
      - docker tag $ENV_CB_DOCKER_IMAGE:$CODEBUILD_BUILD_NUMBER $ENV_CB_ECR_URL:$CODEBUILD_BUILD_NUMBER
      - echo Pushing the Docker image...
      - docker push $ENV_CB_ECR_URL:$CODEBUILD_BUILD_NUMBER
  post_build:
    commands:
      - aws s3 cp s3://$ENV_CB_S3_ARTIFACTS/manifests . --recursive
      - ls -la
      - echo $CODEBUILD_BUILD_NUMBER
      - yq e -i ".spec.template.spec.containers[0].image = \"$ENV_CB_ECR_URL:$CODEBUILD_BUILD_NUMBER\"" deployment.yaml
      - cat deployment.yaml
      #- aws sts get-caller-identity
      - aws eks update-kubeconfig --name $ENV_EKS_CLUSTER_NAME #--role-arn arn:aws:iam::962542038213:role/codebuild-role-devsecops-demo
      - kubectl get pods --all-namespaces
      - kubectl delete -f .
      - echo "test"
